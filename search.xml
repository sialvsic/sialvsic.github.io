<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[搭建个人博客（一）]]></title>
      <url>http://yoursite.com/2016/08/18/how-to-create-blog-1/</url>
      <content type="html"><![CDATA[<h1>搭建个人博客（一）</h1>
<p><strong>前言</strong></p>
<p>作为一个程序员，平时有一些好的想法，或者笔记想要记录；虽然有很多不错的网站，比如博客园，CSDN······· 但作为一个支持开源的用户，和一个技术控，怎能没有一个自己的博客呢？幸运的是，因为公司要求写一篇Markdown语法的博客，就想着索性自己搭一个博客吧。so，利用这两天的时间，在网上看了很多的教程，又在自己的不断摸索下，终于尝试成功了，搭建了一个github + hexo + 自己域名 + Next 主题 的一个博客</p>
<p>地址：</p>
<blockquote>
<p>Alvin-blog <a href="http://sialvsic.com" target="_blank" rel="external">http://sialvsic.com</a></p>
</blockquote>
<p><strong>感想</strong></p>
<p>想想发现，确实有很多的博客写的不错，但是因为时间的缘故，技术的更新和网址的变更带来很多的问题，而且博文的水平参差不齐，我看的第一篇文章就是带有错误的文章，很可能一个小小的命令的错误就会带给读者很大的困惑，感觉博主也应该对此负责，时常的更新或者有一些提醒；综上，想分享一下我的过程，希望能够给读者带来一些帮助。</p>
<p><strong>声明</strong></p>
<p>本文适合</p>
<ul>
<li>linux和mac的用户，对windows的用户有一定的参考价值</li>
<li>有一定基础的人员参考，对于0基础人员权当是学习一下</li>
</ul>
<p><strong>前提</strong></p>
<ul>
<li>git</li>
<li>github 特别是gh-pages</li>
<li>markdown</li>
</ul>
<p><strong>START</strong></p>
<p>我会分阶段逐步完成整个过程，希望大家可以边看边完成</p>
<p><strong>ToDoList</strong></p>
<ul>
<li><strong>安装npm</strong></li>
<li><strong>利用hexo搭建本地博客</strong></li>
<li><strong>在GitHub上发布博客</strong></li>
<li><strong>购买域名</strong></li>
<li><strong>用自己的域名关联博客</strong></li>
<li><strong>优化hexo博客</strong></li>
</ul>
<hr>
<h2>知识简介</h2>
<h3>GitHub简介</h3>
<blockquote>
<p><strong>GitHub</strong> is a Web-based Git repository hosting service。    —— <a href="https://github.com/" target="_blank" rel="external">GitHub</a></p>
</blockquote>
<p>即：GitHub就是一个基于Web的托管服务，当然GitHub的功能不单单有这些。</p>
<h3>GitHub Pages 简介</h3>
<blockquote>
<p><strong>GitHub Pages</strong> 本用于介绍托管在 GitHub 的项目， 不过，由于他的空间免费稳定，用来做搭建一个博客再好不过了。    — <a href="https://pages.github.com/" target="_blank" rel="external">GitHub Pages</a></p>
</blockquote>
<p>GitHub Pages可以被认为是用户编写的、托管在github上的静态网页。</p>
<p><img src="http://obqvt6b56.bkt.clouddn.com/blog-githubPages.jpg" alt="Alt text"></p>
<h3>Hexo简介</h3>
<blockquote>
<p>快速、简洁且高效的博客框架    —— <a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo</a></p>
</blockquote>
<p><img src="http://obqvt6b56.bkt.clouddn.com/hexo.png" alt="Alt text"></p>
<h2>安装必备软件</h2>
<p>可以参考 <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">https://hexo.io/zh-cn/docs/</a> 安装下列两个软件</p>
<h3>1.安装Npm</h3>
<blockquote>
<p>npm — a package manager for javascript：node 的包管理器</p>
</blockquote>
<p>github:  https://github.com/npm/npm</p>
<p>官网：https://www.npmjs.com/</p>
<p>对于Linux和Mac 的用户直接点开上面的github的地址，执行<code>Fancy Install (Unix)</code>中的命令即可</p>
<p>实质上安装完node.js后会带有npm，所以可以按照官网的方式安装node.js即可</p>
<h3>2.安装<a href="http://git-scm.com/" target="_blank" rel="external">Git</a></h3>
<p>建议使用包管理器来安装
Linux:<br>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install git</div></pre></td></tr></table></figure></p>
<p>Mac：
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install git</div></pre></td></tr></table></figure></p>
<h2>利用hexo搭建本地博客</h2>
<h3>安装hexo</h3>
<p>安装hexo
所有必备的软件安装完成后，即可使用 npm 安装 Hexo
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo-cli</div></pre></td></tr></table></figure></p>
<h3>本地初始化博客</h3>
<p>1.安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件</p>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo init &lt;folder&gt;</div><div class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</div><div class="line">$ npm install</div></pre></td></tr></table></figure></p>
<p>2.初始化完成后，运行如下命令自动生成hexo 博客相关的文件</p>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo g</div></pre></td></tr></table></figure></p>
<p>3.运行如下命令，打开本地的服务器</p>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo s</div></pre></td></tr></table></figure></p>
<p>4.在浏览器中打开localhost:4000，既可看到hexo运行的结果，本地的博客也就搭建完成了</p>
<h3>如何写博客</h3>
<p>使用hexo 写一篇博客是非常简单的，输入以下命令</p>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new &lt;title&gt;    // hexo new firstarticle</div></pre></td></tr></table></figure></p>
<p>即可看到在<code>source/_posts</code> 文件夹下生成一个<code>&lt;title&gt;</code>命名的md（markdown）文件，用自己的喜欢的编辑器打开这个文件就可以书写博客了</p>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">INFO  Created: ~/xxxx/source/_posts/firstarticle.md</div></pre></td></tr></table></figure></p>
<h3>发布博客</h3>
<p>书写完成后，运行
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g</div></pre></td></tr></table></figure></p>
<p>自动生成博客文件，之后运行</p>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo s</div></pre></td></tr></table></figure></p>
<p>可以在localhost:4000看到自己写的博文</p>
<h2>在github上发布博客</h2>
<h3>建立个人的GitHub的仓库</h3>
<p>1.github注册帐号</p>
<p>2.新建库 可以看到有个<code>绿色</code>的New按钮</p>
<p><img src="http://obqvt6b56.bkt.clouddn.com/blog-github-person.png" alt="Alt text"></p>
<p>点击进入后，在此处填入的库名个是为:  账户名.github.io
比如：我的账户名为sialvsic，那么此处填入的库名为 <code>sialvsic.github.io</code></p>
<p><img src="http://obqvt6b56.bkt.clouddn.com/blog-github-new.png" alt="Alt text"></p>
<p>点击create repository后，即可在github上生成一个git库</p>
<p><em>note</em> ：利用<strong>账户.github.io</strong> 这种方式搭建博客，每个github账户只能创建一个。</p>
<h3>发布到GitHub上</h3>
<p>1.配置xx文件</p>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line"><span class="built_in">type</span>: git</div><div class="line">repo: &lt;repository url&gt;</div><div class="line">branch: [branch]</div><div class="line">message: [message]</div></pre></td></tr></table></figure></p>
<p>2.此时执行hexo deploy的命令(注意命令行中的行为)，即可将自己刚刚生成的博客发布到github上，可以登录以下url查看</p>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://账户名.github.io       eg:http://sialvsic.github.io</div></pre></td></tr></table></figure></p>
<p><em>note:</em> 可能deploy之后不会立即看到结果，需要等待10分钟左右。</p>
<p>当然到现在为止，一个免费的博客已经建立了，但唯一的问题就是以这个以下网址访问显得过low，身为博主，当然得有自己的域名，so 下一篇开始详述设置自己的域名</p>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://xxxx.github.io</div></pre></td></tr></table></figure></p>
<h2>常见问题</h2>
<p>1.一开始以为要像平时使用github，要将所有的文件要放在 github 的库中</p>
<p><strong>对于sialvsic.github.io/库名</strong> 此类项目
文件的内容push到gh-pages分支，要呈现的页面以index.html为开始页面，github的会自动识别</p>
<p><strong>对于sialvsic.github.io</strong> 这种，github官方的文档说内容要push在master分支中，我最初不清楚<strong>hexo的工作原理</strong>，将整个hexo的文件夹push到sialvsic.github.io库中的master分支上，但是发现并不起作用，最后我才明白，原来根本不需要自己push到库中，在执行hexo deploy命令时，hexo会自动生成的html + css这些东西push到库中，而这个映射关系就是自己在_config.yml文件中写的这个配置</p>
<p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">deploy：</div><div class="line"><span class="built_in">type</span>：</div><div class="line">repo：&lt;repository url&gt;</div><div class="line">branch：[branch]</div><div class="line">message：[message]</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Communication and some idea]]></title>
      <url>http://yoursite.com/2015/11/27/communication-and-some-idea/</url>
      <content type="html"><![CDATA[<h1>沟通 &amp;&amp; 一些感想</h1>
<p><strong>前言</strong></p>
<p>本周的思沃大讲堂，讲师和我们分享了有关沟通的一些方法，原则和实践，感觉收获良多。也不由得引起自己的一些思考：</p>
<h2>关于沟通</h2>
<p>一直以来自己是一个偏于内向的人，我是哥哥，而双胞胎的弟弟更加外向一些，或许就是这么互补吧。小时候父亲总说希望我能够外向些，能够像弟弟一样，多和别人沟通，交流。但一直以来，听过了早已无数次，但一直没有在意，到了大学，也是如此。或许我觉得一个人的生活更有意思，但实际上我心里的答案并不是这样，我觉得更大程度上是因为没有处在一个自己期待中的环境吧，没有遇到志同道合的朋友。可是，这样的想法对么，这是一个借口或是理由么，当然不是。现在想想，之前的我活的太局限了，以为自己看到的就是世界的全部，呆在自己的世界飘飘然。然而，自从暑假，进入思沃学院，这短短的一个半月时间，给我带来了巨大的成长，我不再是一个以自我为中心的弱者，老师给我们带来的是一种启示和引导，思想上到蜕变和做事方法的改变是让我觉得收获最大的。让我明白了，原来世界真的很大，我所不知道的东西还有很多，自己之前的想法还是太天真了。</p>
<p>就如我们的本周做的feedback一样，暑假我们也相互做了feedback，well的方面就不多说了，less well方面大家都觉得我可能还是平日里交流沟通太少，不怎么说话，有些沉默寡言······
我觉得大家说的很对，这确实是一个很大的问题，当时我就意识到，既然大家给我提出了这个问题那么这个问题就必须去解决。so，我对自己说，希望今后多和大家交流，哪怕每天只是多说一句话，多问一个问题。 如今，回过头来看看，这段时间里，自己确实有着很大变化，如果不是大家的反馈，我可能也没有这种良性的变化。</p>
<p>周六的时候，讲师更多的是去讲一些，在一个团队中如何去沟通的问题，毕竟沟通是解决问题的一种很良好的方式。对一个敏捷的团队也是如此，我知道thoughtworks是一家推行敏捷的公司，我们的项目团队也基本采用敏捷的模式，归纳而言，沟通在一个团队中最大的好处就是做了两件事：</p>
<blockquote>
<p>如果你想要，就一定要说，不说，别人怎么知道你想要呢？ （敢于沟通)</p>
<p>要想尽一切办法， 让客户觉得：“你以为你以为的就是你以为的” （确认自己的想法)</p>
</blockquote>
<p><code>客户付钱是让我们把事情做对而不是把事情改对</code>,及时的沟通会让我们减少很多不必要的事情。</p>
<p>虽然我没有亲身经历过一个真实的项目，可我也明白，有时候你不问清楚，有一点点的模糊都会带来很多的错误，甚至灾难。因为在一定程度上，每个都会发自本能的去脑补了一些不太清晰的东西，以我们自身的角度去理解，去判断。 这是很危险的。</p>
<p><strong>总结</strong></p>
<p>说了很多，其实道理大家都懂，就看自身怎么去实践，不懂就要问，这是小学时我们都学过的道理，只要我们在加上合适的时机和方式，沟通也没有那么难。</p>
<hr>
<h2>关于思沃大讲堂</h2>
<p>感觉过的很快，六周已经过去了，回顾这六周的内容：</p>
<ul>
<li>linux</li>
<li>git</li>
<li>html + css</li>
<li>response-design</li>
<li>javascript</li>
<li>communication</li>
</ul>
<p>每一周讲师都会给我们带来新鲜的技术和内容，让我在这六周里有很快的成长，接触到很多新鲜的事物，也逐渐认清了自己，知道了自己的水平如何，路还很长，还要学习很多的东西，但是看大家都很努力的拼搏成长，我也不能落后。</p>
<p>上周六的测试着实给人一次打击，简单的3道练习竟然没能按时做出来，当天晚上回去查了些资料才做出来了。回过头来想想，这是有问题的，我应该可以做出来而未能按时做出来，我觉得一方面是因为最近没有练习js 的编程，给自己提了个醒，重要的还是<code>基础</code>，<code>基础</code>，<code>基础</code> ，自己在API这方面还要再下功夫，多看，多学，多练；还有一方面是因为自己的时间安排不合理，效率有些低，经常陷入yak shaving的困境，浪费了很多的时间。最近的琐事比较多，没有办法很好的集中精力去做事情，这事目前亟待解决的。</p>
<p>解决方法：</p>
<ol>
<li>坚持使用种子习惯，坚持培养良好的习惯</li>
<li>使用一些效率工具 todoist， toggle，trello</li>
</ol>
]]></content>
    </entry>
    
  
  
</search>
